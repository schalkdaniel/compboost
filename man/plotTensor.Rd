% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_tensor.R
\name{plotTensor}
\alias{plotTensor}
\title{Visualize bivariate tensor products}
\usage{
plotTensor(cboost, tname, npoints = 100L, nbins = 15L)
}
\arguments{
\item{cboost}{(\link{Compboost})\cr
A trained \code{Compboost} object.}

\item{tname}{(\code{character(2L)})\cr
Name of the tensor base learner.}

\item{npoints}{(\code{integer(1L)})\cr
Number of grid points per numerical feature. Note: For two numerical features
the overall number of grid points is \code{npoints^2}. For a numerical and
categorical feature it is \code{npoints * ncat} with \code{ncat} the number
of categories. For two categorical features \code{ncat^2} grid points are
drawn.}

\item{nbins}{(\code{logical(1L)})\cr
Number of bins for the surface. Only applies in the case of two numerical features.
A smooth surface is drawn if \code{nbins = NULL}.}
}
\value{
\code{ggplot} object containing the graphic.
}
\description{
This function visualizes the contribution of a bivariate tensor product.
}
\examples{
cboost = Compboost$new(data = iris, target = "Petal.Length",
  loss = LossQuadratic$new())

cboost$addBaselearner("Species", "ridge", BaselearnerCategoricalRidge)
cboost$addTensor("Sepal.Width", "Sepal.Length", df1 = 4, df2 = 4)
cboost$addTensor("Sepal.Width", "Species", df1 = 4, df2 = 2)

cboost$train(150L)

plotTensor(cboost, "Sepal.Width_Species_tensor")
plotTensor(cboost, "Sepal.Width_Sepal.Length_tensor")
plotTensor(cboost, "Sepal.Width_Sepal.Length_tensor", nbins = NULL)
}
