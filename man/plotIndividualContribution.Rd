% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_ind_contr.R
\name{plotIndividualContribution}
\alias{plotIndividualContribution}
\title{Decompose the predicted value based on the given features}
\usage{
plotIndividualContribution(
  cboost,
  newdata,
  aggregate = TRUE,
  colbreaks = c(-Inf, 0, Inf),
  collabels = c("negative", "positive"),
  nround = 2L,
  offset = TRUE
)
}
\arguments{
\item{cboost}{[\code{Compboost} class]\cr
A trained \code{Compboost} object.}

\item{newdata}{[\code{data.frame}]\cr
Data frame containing exactly one row holding the new observations.}

\item{aggregate}{[\code{logical(1L)}]\cr
Number of colored base learners added to the legend.}

\item{colbreaks}{[\code{numeric()}]\cr
Breaks to visualize/highlight different predicted values. Default creates different
colors for positive and negative score values. If set to \code{NULL} no coloring
is applied.}

\item{collabels}{[\code{character(length(colbreaks) - 1)}]\cr
Labels for the color breaks. If set to \code{NULL} intervals are used as labels.}

\item{nround}{[\code{integer(1L)}]\cr
Digit passed to \code{round} for labels (default is \code{nround = 2L}).}

\item{offset}{[\code{logical(1L)}]\cr
Flag to indicate whether the offset should be added to the figure or not.}
}
\value{
\code{ggplot} object containing the graphic.
}
\description{
This function visualizes the contribution of each feature regarding the predicted value.
By default, multiple base learners defined on one feature are aggregated. If you
want to show the contribution of single base learner, then set \code{aggregate = FALSE}.
}
\examples{
dat = mtcars
fnum = c("cyl", "disp", "hp", "drat", "wt", "qsec")
fcat = c("vs", "am", "gear", "carb")
for (fn in fcat) dat[[fn]] = as.factor(dat[[fn]])

cboost = Compboost$new(data = dat, target = "mpg",
  loss = LossQuadratic$new())

for (fn in fnum) cboost$addComponents(fn, df = 3)
for (fn in fcat) cboost$addBaselearner(fn, "ridge", BaselearnerCategoricalRidge)
cboost$train(500L)
cbreaks = c(-Inf, -0.1, 0.1, Inf)
clabs   = c("bad", "middle", "good")
plotIndividualContribution(cboost, dat[10, ], colbreaks = cbreaks,
  collabels = clabs)
plotIndividualContribution(cboost, dat[10, ], offset = FALSE,
  colbreaks = cbreaks, collabels = clabs)
}
