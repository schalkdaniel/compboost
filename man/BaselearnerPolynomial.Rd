% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{BaselearnerPolynomial}
\alias{BaselearnerPolynomial}
\title{Base-learner factory for polynomial regression}
\format{
\code{\link{S4}} object.
}
\description{
\code{BaselearnerPolynomial} creates a polynomial base-learner factory
 object which can be registered within a base-learner list and then used
 for training.
}
\section{Usage}{

\preformatted{
BaselearnerPolynomial$new(data_source, list(degree, intercept))
BaselearnerPolynomial$new(data_source, blearner_type, list(degree, intercept))
}
}

\section{Arguments}{

\describe{
\item{\code{data_source} [\code{Data} Object]}{
  Data object which contains the source data.
}
\item{\code{degree} [\code{integer(1)}]}{
  This argument is used for transforming the source data. Each element is
  taken to the power of the \code{degree} argument.
}
\item{\code{intercept} [\code{logical(1)}]}{
  Indicating whether an intercept should be added or not. Default is set to TRUE.
}
}
}

\section{Details}{

  The polynomial base-learner factory takes any matrix which the user wants
  to pass the number of columns indicates how much parameter are estimated.
}

\section{Fields}{

  This class doesn't contain public fields.
}

\section{Methods}{

\describe{
\item{\code{getData()}}{Get the data matrix of the target data which is used
  for modeling.}
\item{\code{summarizeFactory()}}{Summarize the base-learner factory object.}
}
}

\examples{
# Sample data:
data_mat = cbind(1:10)

# Create new data object:
data_source = InMemoryData$new(data_mat, "my_data_name")

# Create new linear base-learner factory:
lin_factory = BaselearnerPolynomial$new(data_source,
  list(degree = 2, intercept = FALSE))
lin_factory_int = BaselearnerPolynomial$new(data_source,
  list(degree = 2, intercept = TRUE))

# Get the transformed data:
lin_factory$getData()
lin_factory_int$getData()

# Summarize factory:
lin_factory$summarizeFactory()

}
