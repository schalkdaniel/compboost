geom_ridgeline            package:ggridges             R Documentation

_P_l_o_t _a _r_i_d_g_e_l_i_n_e (_l_i_n_e _w_i_t_h _f_i_l_l_e_d _a_r_e_a _u_n_d_e_r_n_e_a_t_h)

_D_e_s_c_r_i_p_t_i_o_n:

     Plots the sum of the 'y' and 'height' aesthetics versus 'x',
     filling the area between 'y' and 'y + height' with a color. Thus,
     the data mapped onto y and onto height must be in the same units.
     If you want relative scaling of the heights, you can use
     'geom_density_ridges' with 'stat = "identity"'.

_U_s_a_g_e:

     geom_ridgeline(
       mapping = NULL,
       data = NULL,
       stat = "identity",
       position = "identity",
       na.rm = FALSE,
       show.legend = NA,
       inherit.aes = TRUE,
       ...
     )
     
_A_r_g_u_m_e_n_t_s:

 mapping: Set of aesthetic mappings created by 'aes()' or 'aes_()'. If
          specified and 'inherit.aes = TRUE' (the default), it is
          combined with the default mapping at the top level of the
          plot. You must supply 'mapping' if there is no plot mapping.

    data: The data to be displayed in this layer. There are three
          options:

          If 'NULL', the default, the data is inherited from the plot
          data as specified in the call to 'ggplot()'.

          A 'data.frame', or other object, will override the plot data.

          A 'function' will be called with a single argument, the plot
          data. The return value must be a 'data.frame.', and will be
          used as the layer data.

    stat: The statistical transformation to use on the data for this
          layer, as a string.

position: Position adjustment, either as a string, or the result of a
          call to a position adjustment function.

   na.rm: If 'FALSE', the default, missing values are removed with a
          warning. If 'TRUE', missing values are silently removed.

show.legend: logical. Should this layer be included in the legends?
          'NA', the default, includes if any aesthetics are mapped.
          'FALSE' never includes, and 'TRUE' always includes.

inherit.aes: If 'FALSE', overrides the default aesthetics, rather than
          combining with them.

     ...: other arguments passed on to 'layer()'. These are often
          aesthetics, used to set an aesthetic to a fixed value, like
          'color = "red"' or 'size = 3'. They may also be parameters to
          the paired geom/stat.

_D_e_t_a_i_l_s:

     In addition to drawing ridgelines, this geom can also draw points
     if they are provided as part of the dataset. The stat
     'stat_density_ridges()' takes advantage of this option to generate
     ridgeline plots with overlaid jittered points.

_A_e_s_t_h_e_t_i_c_s:

     Required aesthetics are in bold.

        • *'x'*

        • *'y'*

        • *'height'* Height of the ridgeline, measured from the
          respective 'y' value. Assumed to be positive, though this is
          not required.

        • 'group' Defines the grouping. Required when the dataset
          contains multiple distinct ridgelines. Will typically be the
          same variable as is mapped to 'y'.

        • 'scale' A scaling factor to scale the height of the
          ridgelines. A value of 1 indicates that the heights are taken
          as is. This aesthetic can be used to convert 'height' units
          into 'y' units.

        • 'min_height' A height cutoff on the drawn ridgelines. All
          values that fall below this cutoff will be removed. The main
          purpose of this cutoff is to remove long tails right at the
          baseline level, but other uses are possible. The cutoff is
          applied before any height scaling is applied via the 'scale'
          aesthetic. Default is 0, so negative values are removed.

        • 'colour' Color of the ridgeline

        • 'fill' Fill color of the area under the ridgeline

        • 'alpha' Transparency level of 'fill'. Not applied to 'color'.
          If you want transparent lines, you can set their color as
          RGBA value, e.g. #FF0000A0 for partially transparent red.

        • 'group' Grouping, to draw multiple ridgelines from one
          dataset

        • 'linetype' Linetype of the ridgeline

        • 'size' Line thickness

        • 'point_shape', 'point_colour', 'point_size', 'point_fill',
          'point_alpha', 'point_stroke' Aesthetics applied to points
          drawn in addition to ridgelines.

_E_x_a_m_p_l_e_s:

     library(ggplot2)
     
     d <- data.frame(x = rep(1:5, 3), y = c(rep(0, 5), rep(1, 5), rep(3, 5)),
                     height = c(0, 1, 3, 4, 0, 1, 2, 3, 5, 4, 0, 5, 4, 4, 1))
     ggplot(d, aes(x, y, height = height, group = y)) + geom_ridgeline(fill="lightblue")
     

